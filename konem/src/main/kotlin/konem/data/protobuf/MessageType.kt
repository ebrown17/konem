// Code generated by Wire protocol buffer compiler, do not edit.
// Source: konem.data.protobuf.MessageType in konemwiremessage.proto
package konem.`data`.protobuf

import com.squareup.wire.EnumAdapter
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.Syntax.PROTO_2
import com.squareup.wire.WireEnum
import kotlin.Int
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic

public enum class MessageType(
  public override val `value`: Int,
) : WireEnum {
  UNKNOWN(0),
  STATUS(1),
  HEARTBEAT(2),
  DATA(3),
  ;

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<MessageType> = object : EnumAdapter<MessageType>(
      MessageType::class, 
      PROTO_2, 
      MessageType.UNKNOWN
    ) {
      public override fun fromValue(`value`: Int): MessageType? = MessageType.fromValue(value)
    }

    @JvmStatic
    public fun fromValue(`value`: Int): MessageType? = when (value) {
      0 -> UNKNOWN
      1 -> STATUS
      2 -> HEARTBEAT
      3 -> DATA
      else -> null
    }
  }
}
