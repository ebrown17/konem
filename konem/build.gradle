apply plugin: 'com.squareup.wire'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "groovy"

description = "Kotlin Netty Medium"

configurations {
    ktlint
}

ktlint {
    debug = true
    ignoreFailures = true

}

dependencies {
    implementation libs.kotlin.coroutines_core
    implementation libs.kotlin.serialization_json
    implementation libs.netty
    implementation libs.wire
    implementation libs.bouncycastle

    implementation libs.slf4j

    testImplementation libs.slf4j
    testImplementation libs.logback
    testImplementation libs.kotest.junit5
    testImplementation libs.kotest.assertions
    testImplementation libs.kotest.property
    testImplementation libs.kotest.datatest

    testImplementation libs.groovy
    testImplementation libs.spock

}

compileTestKotlin {
    kotlinOptions.jvmTarget = jvmTargetVersion
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

detekt {

    input = files("src/main/kotlin")
    parallel = true
    ignoreFailures = true
    config = files("config/detekt/detekt-config.yml")
    reports {
        html {
            enabled = true
        }
        xml {enabled = false}
        txt {enabled = false}
    }

}
tasks.getByPath(':detekt').dependsOn(':konem:generateMainProtos')
sourceSets {
    test {
        groovy {
            exclude '**/**'
        }
    }
}

test {
    jvmArgs = ["-Dio.netty.leakDetection.level=PARANOID","-Dkonem.secure.keyStoreLocation=config/keystore/konem.jks",
               "-Dkonem.secure.keyStoreType=JKS","-Dkonem.secure.keyStorePassword=test123", "-Dio.netty.tryReflectionSetAccessible=true"]

    systemProperties 'SKIP.LONG': '1'

    useJUnitPlatform()

}

wire {
    sourcePath {
        srcDir "${projectDir}/config/proto"
    }
    kotlin {
        out "${projectDir}/src/main/kotlin"
    }
}
