buildscript {
    ext.kotlin_version = '1.3.50'

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath 'com.squareup.wire:wire-gradle-plugin:3.0.0-rc01'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id 'groovy'
    id 'application'
    id "com.github.spotbugs" version "2.0.0"
    id 'idea'
    id "io.gitlab.arturbosch.detekt" version "1.0.1"
}

apply plugin: 'kotlin' // or 'kotlin-multiplatform' for multiplatform projects
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.squareup.wire'

group 'konem'
version '0.1'

sourceCompatibility = 1.8

description = "Kotlin Netty Medium"

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:2.5.5'
    implementation 'org.slf4j:slf4j-api:1.7.26'
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0'
    // Kotlinx Serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.12.0"


    implementation 'io.netty:netty-all:4.1.36.Final'
    implementation 'com.squareup.wire:wire-runtime:3.0.0-rc01'

    testImplementation 'org.spockframework:spock-core:1.2-groovy-2.5'
    testImplementation "org.codehaus.gpars:gpars:1.2.1"
    testImplementation 'junit:junit:4.12'

    ktlint "com.pinterest:ktlint:0.33.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}
//check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath += files("config/ktlint")
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

detekt {
    input = files("src/main/kotlin")
    config = files("config/detekt/yaml/pinpak-detekt-config.yml")
    filters = "**/*.Main.kt"

    reports {
        html {
            enabled = true
            destination = file("config/detekt/reports/report.html")
        }
    }
}

spotbugs {
    sourceSets = [sourceSets.main]
    ignoreFailures = true
    effort = "max"
    reportLevel = "low"
    spotbugsMain {
        reports.xml.enabled = false
        reports.html.enabled = true
    }
    excludeFilter = file("config/spotbugs/spotbugs-exclude.xml")
}

test {
    jvmArgs = ["-Dio.netty.leakDetection.level=PARANOID"]
    systemProperties 'SKIP.LONG': '1'

}

wrapper {
    gradleVersion = '5.6'
}

wire {
    kotlin {
        out "${projectDir}/src/main/kotlin"
    }
}

mainClassName = "konem.MainKt"
