buildscript {
    apply from: "dependencies.gradle"

    repositories {
        jcenter()
    }

    dependencies {
        classpath dependency.plugins.kotlin
        classpath dependency.plugins.kotlinSerialization
        classpath dependency.plugins.wire
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id "io.gitlab.arturbosch.detekt" version "$detektVersion"
    id 'groovy'
    id 'application'
    id 'idea'
}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.squareup.wire'

group = GROUP
version = VERSION_NAME
description = "Kotlin Netty Medium"

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    implementation dependency.groovy
    implementation dependency.slf4j
    implementation dependency.logback

    implementation dependency.kotlin.stdlib.jdk8
    implementation dependency.kotlin.coroutines.core
    implementation dependency.kotlin.kotlinSerialization


    implementation dependency.netty
    implementation dependency.wire

    testImplementation dependency.spock
    testImplementation dependency.gpars
    testImplementation dependency.junit

    ktlint dependency.ktlint
}

compileKotlin {
    kotlinOptions.jvmTarget = versions.jvmTarget
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileTestKotlin {
    kotlinOptions.jvmTarget = versions.jvmTarget
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath += files("config/ktlint")
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

detekt {
    input = files("src/main/kotlin")
    parallel = true
    ignoreFailures = true
    config = files("config/detekt/yaml/pinpak-detekt-config.yml")
    filters = "**/*.Main.kt,**/protobuf/*.KonemMessage"


    reports {
        html {
            enabled = true

        }
        xml {enabled = false}
        txt {enabled = false}

    }
}

test {
    jvmArgs = ["-Dio.netty.leakDetection.level=PARANOID"]
    systemProperties 'SKIP.LONG': '1'

}

wrapper {
    gradleVersion = '5.6'
}

wire {
    kotlin {
        out "${projectDir}/src/main/kotlin"
    }
}

mainClassName = "konem.MainKt"
