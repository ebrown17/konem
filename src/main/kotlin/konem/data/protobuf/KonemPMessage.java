// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: konempmessage.proto at 7:1
package konem.data.protobuf;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireEnum;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class KonemPMessage extends Message<KonemPMessage, KonemPMessage.Builder> {
  public static final ProtoAdapter<KonemPMessage> ADAPTER = new ProtoAdapter_KonemPMessage();

  private static final long serialVersionUID = 0L;

  public static final MessageType DEFAULT_MESSAGETYPE = MessageType.UNKNOWN;

  @WireField(
      tag = 1,
      adapter = "konem.data.protobuf.KonemPMessage$MessageType#ADAPTER"
  )
  public final MessageType messageType;

  @WireField(
      tag = 2,
      adapter = "konem.data.protobuf.KonemPMessage$Unknown#ADAPTER"
  )
  public final Unknown unknown;

  @WireField(
      tag = 3,
      adapter = "konem.data.protobuf.KonemPMessage$Status#ADAPTER"
  )
  public final Status status;

  @WireField(
      tag = 4,
      adapter = "konem.data.protobuf.KonemPMessage$HeartBeat#ADAPTER"
  )
  public final HeartBeat heartBeat;

  @WireField(
      tag = 5,
      adapter = "konem.data.protobuf.KonemPMessage$Data#ADAPTER"
  )
  public final Data data;

  public KonemPMessage(MessageType messageType, Unknown unknown, Status status, HeartBeat heartBeat, Data data) {
    this(messageType, unknown, status, heartBeat, data, ByteString.EMPTY);
  }

  public KonemPMessage(MessageType messageType, Unknown unknown, Status status, HeartBeat heartBeat, Data data, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.messageType = messageType;
    this.unknown = unknown;
    this.status = status;
    this.heartBeat = heartBeat;
    this.data = data;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.messageType = messageType;
    builder.unknown = unknown;
    builder.status = status;
    builder.heartBeat = heartBeat;
    builder.data = data;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof KonemPMessage)) return false;
    KonemPMessage o = (KonemPMessage) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(messageType, o.messageType)
        && Internal.equals(unknown, o.unknown)
        && Internal.equals(status, o.status)
        && Internal.equals(heartBeat, o.heartBeat)
        && Internal.equals(data, o.data);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (messageType != null ? messageType.hashCode() : 0);
      result = result * 37 + (unknown != null ? unknown.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (heartBeat != null ? heartBeat.hashCode() : 0);
      result = result * 37 + (data != null ? data.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (messageType != null) builder.append(", messageType=").append(messageType);
    if (unknown != null) builder.append(", unknown=").append(unknown);
    if (status != null) builder.append(", status=").append(status);
    if (heartBeat != null) builder.append(", heartBeat=").append(heartBeat);
    if (data != null) builder.append(", data=").append(data);
    return builder.replace(0, 2, "KonemPMessage{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<KonemPMessage, Builder> {
    public MessageType messageType;

    public Unknown unknown;

    public Status status;

    public HeartBeat heartBeat;

    public Data data;

    public Builder() {
    }

    public Builder messageType(MessageType messageType) {
      this.messageType = messageType;
      return this;
    }

    public Builder unknown(Unknown unknown) {
      this.unknown = unknown;
      return this;
    }

    public Builder status(Status status) {
      this.status = status;
      return this;
    }

    public Builder heartBeat(HeartBeat heartBeat) {
      this.heartBeat = heartBeat;
      return this;
    }

    public Builder data(Data data) {
      this.data = data;
      return this;
    }

    @Override
    public KonemPMessage build() {
      return new KonemPMessage(messageType, unknown, status, heartBeat, data, super.buildUnknownFields());
    }
  }

  public enum MessageType implements WireEnum {
    UNKNOWN(1),

    STATUS(2),

    HEARTBEAT(3),

    DATA(4);

    public static final ProtoAdapter<MessageType> ADAPTER = ProtoAdapter.newEnumAdapter(MessageType.class);

    private final int value;

    MessageType(int value) {
      this.value = value;
    }

    /**
     * Return the constant for {@code value} or null.
     */
    public static MessageType fromValue(int value) {
      switch (value) {
        case 1: return UNKNOWN;
        case 2: return STATUS;
        case 3: return HEARTBEAT;
        case 4: return DATA;
        default: return null;
      }
    }

    @Override
    public int getValue() {
      return value;
    }
  }

  public static final class Unknown extends Message<Unknown, Unknown.Builder> {
    public static final ProtoAdapter<Unknown> ADAPTER = new ProtoAdapter_Unknown();

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_UNKNOWN = "";

    @WireField(
        tag = 1,
        adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String unknown;

    public Unknown(String unknown) {
      this(unknown, ByteString.EMPTY);
    }

    public Unknown(String unknown, ByteString unknownFields) {
      super(ADAPTER, unknownFields);
      this.unknown = unknown;
    }

    @Override
    public Builder newBuilder() {
      Builder builder = new Builder();
      builder.unknown = unknown;
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof Unknown)) return false;
      Unknown o = (Unknown) other;
      return unknownFields().equals(o.unknownFields())
          && Internal.equals(unknown, o.unknown);
    }

    @Override
    public int hashCode() {
      int result = super.hashCode;
      if (result == 0) {
        result = unknownFields().hashCode();
        result = result * 37 + (unknown != null ? unknown.hashCode() : 0);
        super.hashCode = result;
      }
      return result;
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      if (unknown != null) builder.append(", unknown=").append(unknown);
      return builder.replace(0, 2, "Unknown{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Unknown, Builder> {
      public String unknown;

      public Builder() {
      }

      public Builder unknown(String unknown) {
        this.unknown = unknown;
        return this;
      }

      @Override
      public Unknown build() {
        return new Unknown(unknown, super.buildUnknownFields());
      }
    }

    private static final class ProtoAdapter_Unknown extends ProtoAdapter<Unknown> {
      ProtoAdapter_Unknown() {
        super(FieldEncoding.LENGTH_DELIMITED, Unknown.class);
      }

      @Override
      public int encodedSize(Unknown value) {
        return (value.unknown != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.unknown) : 0)
            + value.unknownFields().size();
      }

      @Override
      public void encode(ProtoWriter writer, Unknown value) throws IOException {
        if (value.unknown != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.unknown);
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public Unknown decode(ProtoReader reader) throws IOException {
        Builder builder = new Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            case 1: builder.unknown(ProtoAdapter.STRING.decode(reader)); break;
            default: {
              FieldEncoding fieldEncoding = reader.peekFieldEncoding();
              Object value = fieldEncoding.rawProtoAdapter().decode(reader);
              builder.addUnknownField(tag, fieldEncoding, value);
            }
          }
        }
        reader.endMessage(token);
        return builder.build();
      }

      @Override
      public Unknown redact(Unknown value) {
        Builder builder = value.newBuilder();
        builder.clearUnknownFields();
        return builder.build();
      }
    }
  }

  public static final class Status extends Message<Status, Status.Builder> {
    public static final ProtoAdapter<Status> ADAPTER = new ProtoAdapter_Status();

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_SHORTNAME = "";

    public static final Integer DEFAULT_ERRORS = 0;

    public static final Integer DEFAULT_RECEIVED = 0;

    public static final Integer DEFAULT_SENT = 0;

    public static final String DEFAULT_DESCRIPTION = "";

    @WireField(
        tag = 1,
        adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String shortName;

    @WireField(
        tag = 2,
        adapter = "com.squareup.wire.ProtoAdapter#INT32"
    )
    public final Integer errors;

    @WireField(
        tag = 3,
        adapter = "com.squareup.wire.ProtoAdapter#INT32"
    )
    public final Integer received;

    @WireField(
        tag = 4,
        adapter = "com.squareup.wire.ProtoAdapter#INT32"
    )
    public final Integer sent;

    @WireField(
        tag = 5,
        adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String description;

    public Status(String shortName, Integer errors, Integer received, Integer sent, String description) {
      this(shortName, errors, received, sent, description, ByteString.EMPTY);
    }

    public Status(String shortName, Integer errors, Integer received, Integer sent, String description, ByteString unknownFields) {
      super(ADAPTER, unknownFields);
      this.shortName = shortName;
      this.errors = errors;
      this.received = received;
      this.sent = sent;
      this.description = description;
    }

    @Override
    public Builder newBuilder() {
      Builder builder = new Builder();
      builder.shortName = shortName;
      builder.errors = errors;
      builder.received = received;
      builder.sent = sent;
      builder.description = description;
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof Status)) return false;
      Status o = (Status) other;
      return unknownFields().equals(o.unknownFields())
          && Internal.equals(shortName, o.shortName)
          && Internal.equals(errors, o.errors)
          && Internal.equals(received, o.received)
          && Internal.equals(sent, o.sent)
          && Internal.equals(description, o.description);
    }

    @Override
    public int hashCode() {
      int result = super.hashCode;
      if (result == 0) {
        result = unknownFields().hashCode();
        result = result * 37 + (shortName != null ? shortName.hashCode() : 0);
        result = result * 37 + (errors != null ? errors.hashCode() : 0);
        result = result * 37 + (received != null ? received.hashCode() : 0);
        result = result * 37 + (sent != null ? sent.hashCode() : 0);
        result = result * 37 + (description != null ? description.hashCode() : 0);
        super.hashCode = result;
      }
      return result;
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      if (shortName != null) builder.append(", shortName=").append(shortName);
      if (errors != null) builder.append(", errors=").append(errors);
      if (received != null) builder.append(", received=").append(received);
      if (sent != null) builder.append(", sent=").append(sent);
      if (description != null) builder.append(", description=").append(description);
      return builder.replace(0, 2, "Status{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Status, Builder> {
      public String shortName;

      public Integer errors;

      public Integer received;

      public Integer sent;

      public String description;

      public Builder() {
      }

      public Builder shortName(String shortName) {
        this.shortName = shortName;
        return this;
      }

      public Builder errors(Integer errors) {
        this.errors = errors;
        return this;
      }

      public Builder received(Integer received) {
        this.received = received;
        return this;
      }

      public Builder sent(Integer sent) {
        this.sent = sent;
        return this;
      }

      public Builder description(String description) {
        this.description = description;
        return this;
      }

      @Override
      public Status build() {
        return new Status(shortName, errors, received, sent, description, super.buildUnknownFields());
      }
    }

    private static final class ProtoAdapter_Status extends ProtoAdapter<Status> {
      ProtoAdapter_Status() {
        super(FieldEncoding.LENGTH_DELIMITED, Status.class);
      }

      @Override
      public int encodedSize(Status value) {
        return (value.shortName != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.shortName) : 0)
            + (value.errors != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.errors) : 0)
            + (value.received != null ? ProtoAdapter.INT32.encodedSizeWithTag(3, value.received) : 0)
            + (value.sent != null ? ProtoAdapter.INT32.encodedSizeWithTag(4, value.sent) : 0)
            + (value.description != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.description) : 0)
            + value.unknownFields().size();
      }

      @Override
      public void encode(ProtoWriter writer, Status value) throws IOException {
        if (value.shortName != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.shortName);
        if (value.errors != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.errors);
        if (value.received != null) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.received);
        if (value.sent != null) ProtoAdapter.INT32.encodeWithTag(writer, 4, value.sent);
        if (value.description != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.description);
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public Status decode(ProtoReader reader) throws IOException {
        Builder builder = new Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            case 1: builder.shortName(ProtoAdapter.STRING.decode(reader)); break;
            case 2: builder.errors(ProtoAdapter.INT32.decode(reader)); break;
            case 3: builder.received(ProtoAdapter.INT32.decode(reader)); break;
            case 4: builder.sent(ProtoAdapter.INT32.decode(reader)); break;
            case 5: builder.description(ProtoAdapter.STRING.decode(reader)); break;
            default: {
              FieldEncoding fieldEncoding = reader.peekFieldEncoding();
              Object value = fieldEncoding.rawProtoAdapter().decode(reader);
              builder.addUnknownField(tag, fieldEncoding, value);
            }
          }
        }
        reader.endMessage(token);
        return builder.build();
      }

      @Override
      public Status redact(Status value) {
        Builder builder = value.newBuilder();
        builder.clearUnknownFields();
        return builder.build();
      }
    }
  }

  public static final class HeartBeat extends Message<HeartBeat, HeartBeat.Builder> {
    public static final ProtoAdapter<HeartBeat> ADAPTER = new ProtoAdapter_HeartBeat();

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_TIME = "";

    @WireField(
        tag = 1,
        adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String time;

    public HeartBeat(String time) {
      this(time, ByteString.EMPTY);
    }

    public HeartBeat(String time, ByteString unknownFields) {
      super(ADAPTER, unknownFields);
      this.time = time;
    }

    @Override
    public Builder newBuilder() {
      Builder builder = new Builder();
      builder.time = time;
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof HeartBeat)) return false;
      HeartBeat o = (HeartBeat) other;
      return unknownFields().equals(o.unknownFields())
          && Internal.equals(time, o.time);
    }

    @Override
    public int hashCode() {
      int result = super.hashCode;
      if (result == 0) {
        result = unknownFields().hashCode();
        result = result * 37 + (time != null ? time.hashCode() : 0);
        super.hashCode = result;
      }
      return result;
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      if (time != null) builder.append(", time=").append(time);
      return builder.replace(0, 2, "HeartBeat{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<HeartBeat, Builder> {
      public String time;

      public Builder() {
      }

      public Builder time(String time) {
        this.time = time;
        return this;
      }

      @Override
      public HeartBeat build() {
        return new HeartBeat(time, super.buildUnknownFields());
      }
    }

    private static final class ProtoAdapter_HeartBeat extends ProtoAdapter<HeartBeat> {
      ProtoAdapter_HeartBeat() {
        super(FieldEncoding.LENGTH_DELIMITED, HeartBeat.class);
      }

      @Override
      public int encodedSize(HeartBeat value) {
        return (value.time != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.time) : 0)
            + value.unknownFields().size();
      }

      @Override
      public void encode(ProtoWriter writer, HeartBeat value) throws IOException {
        if (value.time != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.time);
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public HeartBeat decode(ProtoReader reader) throws IOException {
        Builder builder = new Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            case 1: builder.time(ProtoAdapter.STRING.decode(reader)); break;
            default: {
              FieldEncoding fieldEncoding = reader.peekFieldEncoding();
              Object value = fieldEncoding.rawProtoAdapter().decode(reader);
              builder.addUnknownField(tag, fieldEncoding, value);
            }
          }
        }
        reader.endMessage(token);
        return builder.build();
      }

      @Override
      public HeartBeat redact(HeartBeat value) {
        Builder builder = value.newBuilder();
        builder.clearUnknownFields();
        return builder.build();
      }
    }
  }

  public static final class Data extends Message<Data, Data.Builder> {
    public static final ProtoAdapter<Data> ADAPTER = new ProtoAdapter_Data();

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_DATA = "";

    @WireField(
        tag = 1,
        adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String data;

    public Data(String data) {
      this(data, ByteString.EMPTY);
    }

    public Data(String data, ByteString unknownFields) {
      super(ADAPTER, unknownFields);
      this.data = data;
    }

    @Override
    public Builder newBuilder() {
      Builder builder = new Builder();
      builder.data = data;
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof Data)) return false;
      Data o = (Data) other;
      return unknownFields().equals(o.unknownFields())
          && Internal.equals(data, o.data);
    }

    @Override
    public int hashCode() {
      int result = super.hashCode;
      if (result == 0) {
        result = unknownFields().hashCode();
        result = result * 37 + (data != null ? data.hashCode() : 0);
        super.hashCode = result;
      }
      return result;
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      if (data != null) builder.append(", data=").append(data);
      return builder.replace(0, 2, "Data{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Data, Builder> {
      public String data;

      public Builder() {
      }

      public Builder data(String data) {
        this.data = data;
        return this;
      }

      @Override
      public Data build() {
        return new Data(data, super.buildUnknownFields());
      }
    }

    private static final class ProtoAdapter_Data extends ProtoAdapter<Data> {
      ProtoAdapter_Data() {
        super(FieldEncoding.LENGTH_DELIMITED, Data.class);
      }

      @Override
      public int encodedSize(Data value) {
        return (value.data != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.data) : 0)
            + value.unknownFields().size();
      }

      @Override
      public void encode(ProtoWriter writer, Data value) throws IOException {
        if (value.data != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.data);
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public Data decode(ProtoReader reader) throws IOException {
        Builder builder = new Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            case 1: builder.data(ProtoAdapter.STRING.decode(reader)); break;
            default: {
              FieldEncoding fieldEncoding = reader.peekFieldEncoding();
              Object value = fieldEncoding.rawProtoAdapter().decode(reader);
              builder.addUnknownField(tag, fieldEncoding, value);
            }
          }
        }
        reader.endMessage(token);
        return builder.build();
      }

      @Override
      public Data redact(Data value) {
        Builder builder = value.newBuilder();
        builder.clearUnknownFields();
        return builder.build();
      }
    }
  }

  private static final class ProtoAdapter_KonemPMessage extends ProtoAdapter<KonemPMessage> {
    ProtoAdapter_KonemPMessage() {
      super(FieldEncoding.LENGTH_DELIMITED, KonemPMessage.class);
    }

    @Override
    public int encodedSize(KonemPMessage value) {
      return (value.messageType != null ? MessageType.ADAPTER.encodedSizeWithTag(1, value.messageType) : 0)
          + (value.unknown != null ? Unknown.ADAPTER.encodedSizeWithTag(2, value.unknown) : 0)
          + (value.status != null ? Status.ADAPTER.encodedSizeWithTag(3, value.status) : 0)
          + (value.heartBeat != null ? HeartBeat.ADAPTER.encodedSizeWithTag(4, value.heartBeat) : 0)
          + (value.data != null ? Data.ADAPTER.encodedSizeWithTag(5, value.data) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, KonemPMessage value) throws IOException {
      if (value.messageType != null) MessageType.ADAPTER.encodeWithTag(writer, 1, value.messageType);
      if (value.unknown != null) Unknown.ADAPTER.encodeWithTag(writer, 2, value.unknown);
      if (value.status != null) Status.ADAPTER.encodeWithTag(writer, 3, value.status);
      if (value.heartBeat != null) HeartBeat.ADAPTER.encodeWithTag(writer, 4, value.heartBeat);
      if (value.data != null) Data.ADAPTER.encodeWithTag(writer, 5, value.data);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public KonemPMessage decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: {
            try {
              builder.messageType(MessageType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 2: builder.unknown(Unknown.ADAPTER.decode(reader)); break;
          case 3: builder.status(Status.ADAPTER.decode(reader)); break;
          case 4: builder.heartBeat(HeartBeat.ADAPTER.decode(reader)); break;
          case 5: builder.data(Data.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public KonemPMessage redact(KonemPMessage value) {
      Builder builder = value.newBuilder();
      if (builder.unknown != null) builder.unknown = Unknown.ADAPTER.redact(builder.unknown);
      if (builder.status != null) builder.status = Status.ADAPTER.redact(builder.status);
      if (builder.heartBeat != null) builder.heartBeat = HeartBeat.ADAPTER.redact(builder.heartBeat);
      if (builder.data != null) builder.data = Data.ADAPTER.redact(builder.data);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
